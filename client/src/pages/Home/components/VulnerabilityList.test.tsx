import React from 'react';
import VulnerabilityList from './VulnerabilityList';
import { render } from '@testing-library/react';
import { useVulnerabilities } from '../../../hooks/useVulnerabilities';
import { vulnerabilitiesListMockData } from '../../../tests/__mocks__/vulnerabilitiesListMockData';

jest.mock('../../../hooks/useVulnerabilities')

const mockedUseVulnerabilities = jest.mocked(useVulnerabilities)

describe('vulnerability list', () => {
  describe('render to page', () => {
    console.log('vulnerabilitiesListMockData: ', vulnerabilitiesListMockData)
    beforeEach(() => {
      mockedUseVulnerabilities.mockReturnValue(vulnerabilitiesListMockData as any);
    });
    it('should render the vulnerability name', () => {
      const { getByText } = render(<VulnerabilityList />);
      expect(getByText('Outdated PHP')).toBeInTheDocument();
    })
    it('should render a list of vulnerabilities bt severity', () => {
      const { getByText } = render(<VulnerabilityList />);
      expect(getByText('HIGH')).toBeInTheDocument();
    });
    it('should render the vulnerability category', () => {
      const { getByText } = render(<VulnerabilityList />);
      expect(getByText('Generic')).toBeInTheDocument();
    })
    it('should render the vulnerability description', () => {
      const { getByText } = render(<VulnerabilityList />);
      expect(getByText('Sed illo et deleniti nihil consequatur. Aut dignissimos aut vel. Minima facilis harum saepe quo molestias dolor consequatur. Fugiat et quis quam et delectus.')).toBeInTheDocument();
    });
  })
});
